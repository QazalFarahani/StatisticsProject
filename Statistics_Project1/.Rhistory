p_value
t.test(Z)
#df = t(df)
X = df[, 22]
Y = df[, 23]
X <- as.numeric(gsub("\\.", "", X))
Y <- as.numeric(gsub("\\.", "", Y))
mean_x = mean(X)
mean_y = mean(Y)
mean_diff = mean_x - mean_y
sum_x = 0
for (variable in X) {
sum_x = sum_x + (variable - mean_x) ** 2
}
sum_y = 0
for (variable in Y) {
sum_y = sum_y + (variable - mean_y) ** 2
}
n = length(df[, 22])
sp = sqrt((sum_x + sum_y) / (n + n - 2))
t <- (mean_diff)/(sp/sqrt(n) + sp/sqrt(n))
p_value = 2 * pt(-abs(t),df=n + n -2)
mean_x
mean_y
sp
p_value
t.test(X, Y)
library(readxl)
library(writexl)
df = readxl::read_excel("dataset3.xlsx",sheet = "Sheet1", range = "A1:AT25")
df = df[-c(1), ]
for (col in 2:ncol(df)) {
print(sum(unlist(lapply(lapply(df[, col], as.numeric), is.na))))
}
df = df[-c(41:46)]
#View(df)
df = as.data.frame(sapply(df, as.numeric))
write_xlsx(x=df, "dataset_modified.xlsx")
df = readxl::read_excel("dataset_modified.xlsx",sheet = "Sheet1", range = "A1:AN24")
df = df[-c(1)]
df = t(df)
v2 = rev(df[, 2])
v1 = seq(7,45,1)
data = data.frame(v1, v2, stringsAsFactors = F)
#View(data)
model <- lm(v2~v1)
model$coefficients
library(ggplot2)
plot(v2~v1, data)
abline(model)
df = df[, -c(1)]
#View(df)
price = vector()
time = vector()
region = vector()
for (i in seq(1:22)) {
price = c(price, df[,i])
time = c(time, seq(45,7,-1))
region = c(region, rep(i, 39))
}
data = data.frame(region, time, price)
#View(data)
model <- lm(price~time+region)
model$coefficients
price = vector()
time = vector()
region = vector()
for (i in seq(1:22)) {
price = c(price, df[,i])
time = c(time, seq(45,7,-1))
region = c(region, rep(i, 39))
}
data = data.frame(region, time, price)
data$price <- as.numeric(gsub("\\.", "", data$price))
#View(data)
model <- lm(data$price~data$time+data$region)
summary(model)
mat <- matrix(0, nrow=858,ncol=23)
for (i in seq(2:21)) {
beg = i * 39 + 1
end = beg + 38
mat[beg:end, i+1] = 1
}
data = data.frame(mat, time, price)
#View(data)
lm = lm(price~., data)
model$coefficients
#View(data)
summary(lm)
df = t(df)
X = df[, 22]
Y = df[, 23]
X <- as.numeric(gsub("\\.", "", X))
Y <- as.numeric(gsub("\\.", "", Y))
mean_x = mean(X)
mean_y = mean(Y)
mean_diff = mean_x - mean_y
sum_x = 0
for (variable in X) {
sum_x = sum_x + (variable - mean_x) ** 2
}
sum_y = 0
for (variable in Y) {
sum_y = sum_y + (variable - mean_y) ** 2
}
n = length(df[, 22])
sp = sqrt((sum_x + sum_y) / (n + n - 2))
t <- (mean_diff)/(sp/sqrt(n) + sp/sqrt(n))
p_value = 2 * pt(-abs(t),df=n + n -2)
mean_x
mean_y
sp
p_value
t.test(X, Y)
Z = X - Y
mean_z = mean(Z)
var_z = var(Z)
t <- (mean_z)/(sqrt(var_z/n))
p_value = 2*pt(-abs(t),df=n-1)
mean_z
var_z
p_value
t.test(Z)
df = read.table("had.txt", sep = "")
df = df[sample(1:nrow(df)), ]
label = df['V7']
features = df[,1:6]
split = sample(c(rep(0, 0.8 * nrow(label)), rep(1, 0.2 * nrow(label))))
train_label = label[split == 0,]
test_label = label[split == 1,]
train_features = features[split == 0,]
test_features = features[split == 1,]
write.csv(x=train_label, file="train_label.txt")
write.csv(x=test_label, file="test_label.txt")
write.csv(x=train_features, file="train_features.txt")
write.csv(x=test_features, file="test_features.txt")
data = data.frame(train_features, train_label)
model <- lm(train_label~V1+V2+V3+V4+V5+V6, data=data)
summary(model)
coeff = data.frame(model$coefficients)
Vec = c(rep(1, nrow(test_features)))
test_features = data.frame(Vec, test_features)
predictions = as.matrix(test_features) %*% as.matrix(coeff)
acc = vector()
for (alpha in seq(-2, 2, 0.1)) {
pred_vec = vector()
for (i in 1:nrow(predictions)) {
if (predictions[i] > alpha) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
acc = c(acc, count / nrow(test_features))
}
plot(seq(-2, 2, 0.1), acc)
for (i in 1:nrow(predictions)) {
if (predictions[i] > alpha) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
for (i in 1:nrow(predictions)) {
if (predictions[i] > 0) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
for (i in 1:nrow(predictions)) {
if (predictions[i] > 0) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
count
df = read.table("had.txt", sep = "")
df = df[sample(1:nrow(df)), ]
label = df['V7']
features = df[,1:6]
split = sample(c(rep(0, 0.8 * nrow(label)), rep(1, 0.2 * nrow(label))))
train_label = label[split == 0,]
test_label = label[split == 1,]
train_features = features[split == 0,]
test_features = features[split == 1,]
write.csv(x=train_label, file="train_label.txt")
write.csv(x=test_label, file="test_label.txt")
write.csv(x=train_features, file="train_features.txt")
write.csv(x=test_features, file="test_features.txt")
data = data.frame(train_features, train_label)
model <- lm(train_label~V1+V2+V3+V4+V5+V6, data=data)
summary(model)
for (i in 1:nrow(predictions)) {
if (predictions[i] > 0) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
count / nrow(test_features)
coeff = data.frame(model$coefficients)
Vec = c(rep(1, nrow(test_features)))
test_features = data.frame(Vec, test_features)
predictions = as.matrix(test_features) %*% as.matrix(coeff)
acc = vector()
for (alpha in seq(-2, 2, 0.1)) {
pred_vec = vector()
for (i in 1:nrow(predictions)) {
if (predictions[i] > alpha) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
acc = c(acc, count / nrow(test_features))
}
plot(seq(-2, 2, 0.1), acc)
df = read.table("had.txt", sep = "")
df = df[sample(1:nrow(df)), ]
label = df['V7']
features = df[,1:6]
split = sample(c(rep(0, 0.8 * nrow(label)), rep(1, 0.2 * nrow(label))))
train_label = label[split == 0,]
test_label = label[split == 1,]
train_features = features[split == 0,]
test_features = features[split == 1,]
write.csv(x=train_label, file="train_label.txt")
write.csv(x=test_label, file="test_label.txt")
write.csv(x=train_features, file="train_features.txt")
write.csv(x=test_features, file="test_features.txt")
data = data.frame(train_features, train_label)
model <- lm(train_label~V1+V2+V3+V4+V5+V6, data=data)
summary(model)
for (i in 1:nrow(predictions)) {
if (predictions[i] > 0) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
count / nrow(test_features)
coeff = data.frame(model$coefficients)
Vec = c(rep(1, nrow(test_features)))
test_features = data.frame(Vec, test_features)
predictions = as.matrix(test_features) %*% as.matrix(coeff)
acc = vector()
for (alpha in seq(-2, 2, 0.1)) {
pred_vec = vector()
for (i in 1:nrow(predictions)) {
if (predictions[i] > alpha) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
acc = c(acc, count / nrow(test_features))
}
plot(seq(-2, 2, 0.1), acc)
df = read.table("had.txt", sep = "")
df = df[sample(1:nrow(df)), ]
label = df['V7']
features = df[,1:6]
split = sample(c(rep(0, 0.8 * nrow(label)), rep(1, 0.2 * nrow(label))))
train_label = label[split == 0,]
test_label = label[split == 1,]
train_features = features[split == 0,]
test_features = features[split == 1,]
write.csv(x=train_label, file="train_label.txt")
write.csv(x=test_label, file="test_label.txt")
write.csv(x=train_features, file="train_features.txt")
write.csv(x=test_features, file="test_features.txt")
data = data.frame(train_features, train_label)
model <- lm(train_label~V1+V2+V3+V4+V5+V6, data=data)
summary(model)
coeff = data.frame(model$coefficients)
Vec = c(rep(1, nrow(test_features)))
test_features = data.frame(Vec, test_features)
predictions = as.matrix(test_features) %*% as.matrix(coeff)
acc = vector()
for (i in 1:nrow(predictions)) {
if (predictions[i] > 0) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
count / nrow(test_features)
for (alpha in seq(-2, 2, 0.1)) {
pred_vec = vector()
for (i in 1:nrow(predictions)) {
if (predictions[i] > alpha) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
acc = c(acc, count / nrow(test_features))
}
plot(seq(-2, 2, 0.1), acc)
coeff = data.frame(model$coefficients)
Vec = c(rep(1, nrow(test_features)))
test_features = data.frame(Vec, test_features)
predictions = as.matrix(test_features) %*% as.matrix(coeff)
df = read.table("had.txt", sep = "")
df = df[sample(1:nrow(df)), ]
label = df['V7']
features = df[,1:6]
split = sample(c(rep(0, 0.8 * nrow(label)), rep(1, 0.2 * nrow(label))))
train_label = label[split == 0,]
test_label = label[split == 1,]
train_features = features[split == 0,]
test_features = features[split == 1,]
write.csv(x=train_label, file="train_label.txt")
write.csv(x=test_label, file="test_label.txt")
write.csv(x=train_features, file="train_features.txt")
write.csv(x=test_features, file="test_features.txt")
data = data.frame(train_features, train_label)
model <- lm(train_label~V1+V2+V3+V4+V5+V6, data=data)
summary(model)
coeff = data.frame(model$coefficients)
Vec = c(rep(1, nrow(test_features)))
test_features = data.frame(Vec, test_features)
predictions = as.matrix(test_features) %*% as.matrix(coeff)
acc = vector()
for (i in 1:nrow(predictions)) {
if (predictions[i] > 0) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
count / nrow(test_features)
for (alpha in seq(-2, 2, 0.1)) {
pred_vec = vector()
for (i in 1:nrow(predictions)) {
if (predictions[i] > alpha) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
acc = c(acc, count / nrow(test_features))
}
plot(seq(-2, 2, 0.1), acc)
print(max(acc)))
df = read.table("had.txt", sep = "")
df = df[sample(1:nrow(df)), ]
label = df['V7']
features = df[,1:6]
split = sample(c(rep(0, 0.8 * nrow(label)), rep(1, 0.2 * nrow(label))))
train_label = label[split == 0,]
test_label = label[split == 1,]
train_features = features[split == 0,]
test_features = features[split == 1,]
write.csv(x=train_label, file="train_label.txt")
write.csv(x=test_label, file="test_label.txt")
write.csv(x=train_features, file="train_features.txt")
write.csv(x=test_features, file="test_features.txt")
data = data.frame(train_features, train_label)
model <- lm(train_label~V1+V2+V3+V4+V5+V6, data=data)
summary(model)
coeff = data.frame(model$coefficients)
Vec = c(rep(1, nrow(test_features)))
test_features = data.frame(Vec, test_features)
predictions = as.matrix(test_features) %*% as.matrix(coeff)
acc = vector()
for (i in 1:nrow(predictions)) {
if (predictions[i] > 0) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
count / nrow(test_features)
for (alpha in seq(-2, 2, 0.1)) {
pred_vec = vector()
for (i in 1:nrow(predictions)) {
if (predictions[i] > alpha) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
acc = c(acc, count / nrow(test_features))
}
plot(seq(-2, 2, 0.1), acc)
which.max(acc)
df = read.table("had.txt", sep = "")
df = df[sample(1:nrow(df)), ]
label = df['V7']
features = df[,1:6]
split = sample(c(rep(0, 0.8 * nrow(label)), rep(1, 0.2 * nrow(label))))
train_label = label[split == 0,]
test_label = label[split == 1,]
train_features = features[split == 0,]
test_features = features[split == 1,]
write.csv(x=train_label, file="train_label.txt")
write.csv(x=test_label, file="test_label.txt")
write.csv(x=train_features, file="train_features.txt")
write.csv(x=test_features, file="test_features.txt")
data = data.frame(train_features, train_label)
model <- lm(train_label~V1+V2+V3+V4+V5+V6, data=data)
summary(model)
coeff = data.frame(model$coefficients)
Vec = c(rep(1, nrow(test_features)))
test_features = data.frame(Vec, test_features)
predictions = as.matrix(test_features) %*% as.matrix(coeff)
acc = vector()
for (i in 1:nrow(predictions)) {
if (predictions[i] > 0) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
count / nrow(test_features)
for (alpha in seq(-2, 2, 0.1)) {
pred_vec = vector()
for (i in 1:nrow(predictions)) {
if (predictions[i] > alpha) {
pred_vec = c(pred_vec, 1)
}
else
pred_vec = c(pred_vec, -1)
}
count = 0
for (i in 1:nrow(predictions)) {
if (pred_vec[i] == test_label[i])
count = count + 1
}
acc = c(acc, count / nrow(test_features))
}
plot(seq(-2, 2, 0.1), acc)
which.max(acc)
print(-2 + which.max(acc) * 0.1)
